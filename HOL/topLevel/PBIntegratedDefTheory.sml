structure PBIntegratedDefTheory :> PBIntegratedDefTheory =
struct
  val _ = if !Globals.print_thy_loads then TextIO.print "Loading PBIntegratedDefTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (* Parents and ML dependencies *)
  local open PBTypeIntegratedTheory aclfoundationTheory
  in end;
  val _ = Theory.link_parents
          ("PBIntegratedDef",
          Arbnum.fromString "1528688714",
          Arbnum.fromString "901268")
          [("PBTypeIntegrated",
           Arbnum.fromString "1528688712",
           Arbnum.fromString "394032"),
           ("aclfoundation",
           Arbnum.fromString "1528688674",
           Arbnum.fromString "95862")];
  val _ = Theory.incorporate_types "PBIntegratedDef" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("list", "list"), ID("aclfoundation", "Form"),
   ID("PBTypeIntegrated", "stateRole"), ID("option", "option"),
   ID("OMNIType", "command"), ID("PBTypeIntegrated", "slCommand"),
   ID("PBTypeIntegrated", "omniCommand"),
   ID("PBTypeIntegrated", "slState"), ID("min", "bool"), ID("num", "num"),
   ID("aclfoundation", "Princ"), ID("aclfoundation", "IntLevel"),
   ID("aclfoundation", "SecLevel"), ID("OMNIType", "escCommand"),
   ID("PBTypeIntegrated", "plCommand"), ID("bool", "!"), ID("bool", "/\\"),
   ID("min", "="), ID("min", "==>"), ID("min", "@"), ID("bool", "COND"),
   ID("PBTypeIntegrated", "CONDUCT_ORP"),
   ID("PBTypeIntegrated", "CONDUCT_PB"), ID("list", "CONS"),
   ID("OMNIType", "ESCc"), ID("aclfoundation", "FF"),
   ID("aclfoundation", "Form_CASE"), ID("combin", "I"),
   ID("PBTypeIntegrated", "MOVE_TO_ORP"),
   ID("PBTypeIntegrated", "MOVE_TO_PB"), ID("list", "NIL"),
   ID("option", "NONE"), ID("aclfoundation", "Name"),
   ID("PBTypeIntegrated", "OMNI"), ID("PBTypeIntegrated", "Omni"),
   ID("PBTypeIntegrated", "PL"), ID("PBTypeIntegrated", "PLAN_PB"),
   ID("PBTypeIntegrated", "PlatoonLeader"),
   ID("aclfoundation", "Princ_CASE"), ID("OMNIType", "SLc"),
   ID("option", "SOME"), ID("aclfoundation", "TT"), ID("relation", "WF"),
   ID("relation", "WFREC"), ID("aclfoundation", "andf"),
   ID("OMNIType", "command_CASE"), ID("PBTypeIntegrated", "completePB"),
   ID("PBTypeIntegrated", "conductORP"),
   ID("PBTypeIntegrated", "conductPB"), ID("aclfoundation", "controls"),
   ID("PBTypeIntegrated", "crossLD"), ID("aclfoundation", "domi"),
   ID("aclfoundation", "doms"), ID("aclfoundation", "eqf"),
   ID("aclfoundation", "eqi"), ID("aclfoundation", "eqn"),
   ID("aclfoundation", "eqs"), ID("PBIntegratedDef", "getOmniCommand"),
   ID("aclfoundation", "impf"),
   ID("PBTypeIntegrated", "invalidOmniCommand"), ID("list", "list_CASE"),
   ID("aclfoundation", "lt"), ID("aclfoundation", "lte"),
   ID("aclfoundation", "meet"), ID("PBTypeIntegrated", "moveToPB"),
   ID("aclfoundation", "notf"), ID("option", "option_CASE"),
   ID("aclfoundation", "orf"), ID("aclfoundation", "prop"),
   ID("aclfoundation", "quoting"), ID("aclfoundation", "reps"),
   ID("aclfoundation", "says"), ID("PBIntegratedDef", "secAuthorization"),
   ID("PBIntegratedDef", "secContext"), ID("PBIntegratedDef", "secHelper"),
   ID("PBTypeIntegrated", "slCommand_CASE"),
   ID("aclfoundation", "speaks_for"),
   ID("PBTypeIntegrated", "ssmConductORPComplete"),
   ID("PBTypeIntegrated", "ssmConductPBComplete"),
   ID("PBTypeIntegrated", "ssmMoveToORPComplete"),
   ID("PBTypeIntegrated", "ssmMoveToPBComplete"),
   ID("PBTypeIntegrated", "ssmPlanPBComplete"),
   ID("PBTypeIntegrated", "stateRole_CASE")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYV "'b", TYV "'a", TYOP [3], TYOP [6], TYOP [5, 3], TYOP [4, 4],
   TYOP [2, 5, 2, 1, 0], TYOP [1, 6], TYOP [7], TYOP [0, 8, 7], TYV "'e",
   TYV "'d", TYOP [2, 5, 2, 11, 10], TYOP [1, 12], TYOP [0, 13, 13],
   TYOP [8], TYOP [0, 15, 14], TYOP [0, 13, 7], TYOP [0, 13, 8], TYOP [9],
   TYOP [0, 13, 19], TYOP [0, 13, 20], TYOP [10], TYOP [11, 2],
   TYOP [12, 2, 11], TYOP [13, 2, 10], TYOP [14], TYOP [15],
   TYOP [0, 12, 19], TYOP [0, 28, 19], TYOP [0, 24, 19], TYOP [0, 30, 19],
   TYOP [0, 23, 19], TYOP [0, 32, 19], TYOP [0, 25, 19], TYOP [0, 34, 19],
   TYOP [0, 4, 19], TYOP [0, 36, 19], TYOP [0, 26, 19], TYOP [0, 38, 19],
   TYOP [0, 20, 19], TYOP [0, 40, 19], TYOP [0, 22, 19], TYOP [0, 42, 19],
   TYOP [0, 8, 19], TYOP [0, 44, 19], TYOP [0, 5, 19], TYOP [0, 46, 19],
   TYOP [0, 27, 19], TYOP [0, 48, 19], TYOP [0, 2, 19], TYOP [0, 50, 19],
   TYOP [0, 19, 19], TYOP [0, 19, 52], TYOP [0, 18, 19], TYOP [0, 18, 54],
   TYOP [0, 7, 19], TYOP [0, 7, 56], TYOP [0, 8, 44], TYOP [0, 21, 19],
   TYOP [0, 59, 21], TYOP [0, 13, 14], TYOP [0, 19, 61], TYOP [0, 7, 7],
   TYOP [0, 6, 63], TYOP [0, 12, 14], TYOP [0, 26, 4], TYOP [0, 22, 8],
   TYOP [0, 22, 67], TYOP [0, 68, 8], TYOP [0, 68, 69], TYOP [0, 68, 70],
   TYOP [0, 25, 8], TYOP [0, 25, 72], TYOP [0, 73, 71], TYOP [0, 73, 74],
   TYOP [0, 24, 8], TYOP [0, 24, 76], TYOP [0, 77, 75], TYOP [0, 77, 78],
   TYOP [0, 12, 8], TYOP [0, 23, 80], TYOP [0, 23, 81], TYOP [0, 82, 79],
   TYOP [0, 81, 83], TYOP [0, 23, 8], TYOP [0, 23, 85], TYOP [0, 86, 84],
   TYOP [0, 81, 87], TYOP [0, 12, 80], TYOP [0, 89, 88], TYOP [0, 89, 90],
   TYOP [0, 89, 91], TYOP [0, 89, 92], TYOP [0, 80, 93], TYOP [0, 5, 8],
   TYOP [0, 95, 94], TYOP [0, 8, 96], TYOP [0, 8, 97], TYOP [0, 12, 98],
   TYOP [0, 8, 8], TYOP [0, 2, 23], TYOP [0, 8, 3], TYOP [0, 27, 3],
   TYOP [0, 86, 8], TYOP [0, 86, 104], TYOP [0, 2, 8], TYOP [0, 106, 105],
   TYOP [0, 23, 107], TYOP [0, 3, 4], TYOP [0, 4, 5], TYOP [0, 18, 18],
   TYOP [0, 111, 18], TYOP [0, 21, 112], TYOP [0, 12, 12],
   TYOP [0, 12, 114], TYOP [0, 3, 8], TYOP [0, 116, 8], TYOP [0, 26, 8],
   TYOP [0, 118, 117], TYOP [0, 4, 119], TYOP [0, 6, 6], TYOP [0, 23, 121],
   TYOP [0, 23, 114], TYOP [0, 24, 12], TYOP [0, 24, 124],
   TYOP [0, 25, 12], TYOP [0, 25, 126], TYOP [0, 22, 12],
   TYOP [0, 22, 128], TYOP [0, 12, 18], TYOP [0, 130, 8], TYOP [0, 8, 131],
   TYOP [0, 13, 132], TYOP [0, 23, 23], TYOP [0, 23, 134], TYOP [0, 4, 8],
   TYOP [0, 136, 8], TYOP [0, 8, 137], TYOP [0, 5, 138], TYOP [0, 5, 6],
   TYOP [0, 5, 12], TYOP [0, 23, 123], TYOP [0, 100, 8], TYOP [0, 27, 8],
   TYOP [0, 144, 143], TYOP [0, 3, 145], TYOP [0, 23, 12],
   TYOP [0, 23, 147], TYOP [0, 8, 100], TYOP [0, 2, 149]]
  end
  val _ = Theory.incorporate_consts "PBIntegratedDef" tyvector
     [("secHelper", 9), ("secContext", 16), ("secAuthorization", 17),
      ("getOmniCommand", 18)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("P", 20), TMV("R", 21), TMV("a", 13), TMV("cmd", 8),
   TMV("getOmniCommand", 18), TMV("v", 12), TMV("v", 13), TMV("v10", 12),
   TMV("v100", 22), TMV("v101", 5), TMV("v102", 12), TMV("v103", 12),
   TMV("v104", 12), TMV("v105", 12), TMV("v106", 12), TMV("v107", 12),
   TMV("v108", 12), TMV("v109", 12), TMV("v11", 12), TMV("v110", 12),
   TMV("v111", 23), TMV("v112", 12), TMV("v113", 23), TMV("v114", 23),
   TMV("v115", 23), TMV("v116", 12), TMV("v117", 23), TMV("v118", 23),
   TMV("v119", 12), TMV("v12", 23), TMV("v120", 24), TMV("v121", 24),
   TMV("v122", 24), TMV("v123", 24), TMV("v124", 25), TMV("v125", 25),
   TMV("v126", 25), TMV("v127", 25), TMV("v128", 22), TMV("v129", 22),
   TMV("v130", 22), TMV("v131", 22), TMV("v132", 22), TMV("v133", 22),
   TMV("v134", 2), TMV("v135", 23), TMV("v136", 23), TMV("v137", 23),
   TMV("v138", 23), TMV("v139", 2), TMV("v14", 23), TMV("v140", 23),
   TMV("v141", 23), TMV("v142", 23), TMV("v143", 23), TMV("v144", 4),
   TMV("v145", 4), TMV("v146", 26), TMV("v148", 26), TMV("v149", 3),
   TMV("v15", 23), TMV("v150", 27), TMV("v152", 27), TMV("v16", 23),
   TMV("v17", 12), TMV("v18", 23), TMV("v19", 23), TMV("v2", 5),
   TMV("v20", 12), TMV("v21", 24), TMV("v22", 24), TMV("v23", 24),
   TMV("v24", 24), TMV("v25", 25), TMV("v26", 25), TMV("v27", 25),
   TMV("v28", 25), TMV("v29", 22), TMV("v3", 12), TMV("v30", 22),
   TMV("v31", 22), TMV("v32", 22), TMV("v33", 22), TMV("v34", 22),
   TMV("v35", 5), TMV("v36", 12), TMV("v37", 12), TMV("v38", 12),
   TMV("v39", 12), TMV("v4", 12), TMV("v40", 12), TMV("v41", 12),
   TMV("v42", 12), TMV("v43", 12), TMV("v44", 12), TMV("v45", 23),
   TMV("v46", 12), TMV("v47", 23), TMV("v48", 23), TMV("v49", 23),
   TMV("v5", 12), TMV("v50", 12), TMV("v51", 23), TMV("v52", 23),
   TMV("v53", 12), TMV("v54", 24), TMV("v55", 24), TMV("v56", 24),
   TMV("v57", 24), TMV("v58", 25), TMV("v59", 25), TMV("v6", 12),
   TMV("v60", 25), TMV("v61", 25), TMV("v62", 22), TMV("v63", 22),
   TMV("v64", 22), TMV("v65", 22), TMV("v66", 22), TMV("v67", 22),
   TMV("v68", 5), TMV("v69", 12), TMV("v7", 12), TMV("v70", 12),
   TMV("v71", 12), TMV("v72", 12), TMV("v73", 12), TMV("v74", 12),
   TMV("v75", 12), TMV("v76", 12), TMV("v77", 12), TMV("v78", 23),
   TMV("v79", 12), TMV("v8", 12), TMV("v80", 23), TMV("v81", 23),
   TMV("v82", 23), TMV("v83", 12), TMV("v84", 23), TMV("v85", 23),
   TMV("v86", 12), TMV("v87", 24), TMV("v88", 24), TMV("v89", 24),
   TMV("v9", 12), TMV("v90", 24), TMV("v91", 25), TMV("v92", 25),
   TMV("v93", 25), TMV("v94", 25), TMV("v95", 22), TMV("v96", 22),
   TMV("v97", 22), TMV("v98", 22), TMV("v99", 22), TMV("xs", 13),
   TMC(16, 29), TMC(16, 31), TMC(16, 33), TMC(16, 35), TMC(16, 37),
   TMC(16, 39), TMC(16, 41), TMC(16, 40), TMC(16, 43), TMC(16, 45),
   TMC(16, 47), TMC(16, 49), TMC(16, 51), TMC(17, 53), TMC(18, 55),
   TMC(18, 57), TMC(18, 21), TMC(18, 58), TMC(19, 53), TMC(20, 60),
   TMC(21, 62), TMC(22, 15), TMC(23, 15), TMC(24, 64), TMC(24, 65),
   TMC(25, 66), TMC(26, 12), TMC(27, 99), TMC(28, 100), TMC(29, 15),
   TMC(30, 15), TMC(31, 7), TMC(31, 13), TMC(32, 5), TMC(33, 101),
   TMC(34, 102), TMC(35, 2), TMC(36, 103), TMC(37, 15), TMC(38, 2),
   TMC(39, 108), TMC(40, 109), TMC(41, 110), TMC(42, 12), TMC(43, 59),
   TMC(44, 113), TMC(45, 115), TMC(46, 120), TMC(47, 27), TMC(48, 27),
   TMC(49, 27), TMC(50, 122), TMC(50, 123), TMC(51, 27), TMC(52, 125),
   TMC(53, 127), TMC(54, 115), TMC(55, 125), TMC(56, 129), TMC(57, 127),
   TMC(58, 18), TMC(59, 115), TMC(60, 8), TMC(61, 133), TMC(62, 129),
   TMC(63, 129), TMC(64, 135), TMC(65, 27), TMC(66, 114), TMC(67, 139),
   TMC(68, 115), TMC(69, 140), TMC(69, 141), TMC(70, 135), TMC(71, 142),
   TMC(72, 123), TMC(73, 17), TMC(74, 16), TMC(75, 9), TMC(76, 146),
   TMC(77, 148), TMC(78, 8), TMC(79, 8), TMC(80, 8), TMC(81, 8),
   TMC(82, 8), TMC(83, 150)]
  end
  structure ThmBind = struct
    val DT = Thm.disk_thm
    val read = Term.read_raw tmvector
  end
  fun op secHelper_def x = x
    val op secHelper_def =
    ThmBind.DT(((("PBIntegratedDef",0),[]),[]),
               [ThmBind.read"%165%3%171%234$0@2%179%207%190%192@2%227%198%197%191$0@6%187@2|@"])
  fun op getOmniCommand_primitive_def x = x
    val op getOmniCommand_primitive_def =
    ThmBind.DT(((("PBIntegratedDef",1),[]),[]),
               [ThmBind.read"%170%216@%201%175%1%169%200$0@2%169%163%155$1$0@%180%199@$0@2|@2%169%163%155$1$0@%180%182@$0@2|@2%169%166%67%163%155$2$0@%180%228$1@2$0@2|@|@2%169%156%78%163%155$2$0@%180%224$1@2$0@2|@|@2%169%156%100%156%89%163%155$3$0@%180%202$1@$2@2$0@2|@|@|@2%169%156%122%156%111%163%155$3$0@%180%226$1@$2@2$0@2|@|@|@2%169%156%144%156%133%163%155$3$0@%180%217$1@$2@2$0@2|@|@|@2%169%156%18%156%7%163%155$3$0@%180%212$1@$2@2$0@2|@|@|@2%169%158%29%163%155$2$0@%180%231$1@%199@2$0@2|@|@2%169%158%29%163%155$2$0@%180%231$1@%182@2$0@2|@|@2%169%168%44%163%155$2$0@%180%231%190$1@2%228%189@3$0@2|@|@2%169%160%55%163%155$2$0@%180%231%190%195@2%228%198$1@4$0@2|@|@2%169%161%57%163%155$2$0@%180%231%190%192@2%228%198%181$1@5$0@2|@|@2%169%167%61%163%155$2$0@%180%231%190%192@2%228%198%197%193$1@6$0@2|@|@2%169%166%120%158%46%158%45%163%155$4$0@%180%231%222$1@$2@2%228$3@3$0@2|@|@|@|@2%169%166%120%158%48%158%47%163%155$4$0@%180%231%229$1@$2@2%228$3@3$0@2|@|@|@|@2%169%156%121%158%29%163%155$3$0@%180%231$1@%224$2@3$0@2|@|@|@2%169%156%124%156%123%158%29%163%155$4$0@%180%231$1@%202$2@$3@3$0@2|@|@|@|@2%169%156%126%156%125%158%29%163%155$4$0@%180%231$1@%226$2@$3@3$0@2|@|@|@|@2%169%156%128%156%127%158%29%163%155$4$0@%180%231$1@%217$2@$3@3$0@2|@|@|@|@2%169%156%130%156%129%158%29%163%155$4$0@%180%231$1@%212$2@$3@3$0@2|@|@|@|@2%169%156%132%158%131%158%29%163%155$4$0@%180%231$1@%231$2@$3@3$0@2|@|@|@|@2%169%158%135%158%134%158%29%163%155$4$0@%180%231$1@%236$2@$3@3$0@2|@|@|@|@2%169%156%137%158%136%158%29%163%155$4$0@%180%231$1@%208$2@$3@3$0@2|@|@|@|@2%169%156%140%158%139%158%138%158%29%163%155$5$0@%180%231$1@%230$2@$3@$4@3$0@2|@|@|@|@|@2%169%157%142%157%141%158%29%163%155$4$0@%180%231$1@%210$2@$3@3$0@2|@|@|@|@2%169%157%145%157%143%158%29%163%155$4$0@%180%231$1@%213$2@$3@3$0@2|@|@|@|@2%169%159%147%159%146%158%29%163%155$4$0@%180%231$1@%211$2@$3@3$0@2|@|@|@|@2%169%159%149%159%148%158%29%163%155$4$0@%180%231$1@%215$2@$3@3$0@2|@|@|@|@2%169%164%151%164%150%158%29%163%155$4$0@%180%231$1@%214$2@$3@3$0@2|@|@|@|@2%169%164%153%164%152%158%29%163%155$4$0@%180%231$1@%221$2@$3@3$0@2|@|@|@|@2%169%164%8%164%154%158%29%163%155$4$0@%180%231$1@%220$2@$3@3$0@2|@|@|@|@2%169%158%60%158%50%163%155$3$0@%180%236$1@$2@2$0@2|@|@|@2%169%156%64%158%63%163%155$3$0@%180%208$1@$2@2$0@2|@|@|@2%169%156%68%158%66%158%65%163%155$4$0@%180%230$1@$2@$3@2$0@2|@|@|@|@2%169%157%70%157%69%163%155$3$0@%180%210$1@$2@2$0@2|@|@|@2%169%157%72%157%71%163%155$3$0@%180%213$1@$2@2$0@2|@|@|@2%169%159%74%159%73%163%155$3$0@%180%211$1@$2@2$0@2|@|@|@2%169%159%76%159%75%163%155$3$0@%180%215$1@$2@2$0@2|@|@|@2%169%164%79%164%77%163%155$3$0@%180%214$1@$2@2$0@2|@|@|@2%169%164%81%164%80%163%155$3$0@%180%221$1@$2@2$0@2|@|@|@2%164%83%164%82%163%155$3$0@%180%220$1@$2@2$0@2|@|@|@43|@2%4%2%219$0@%184%218@2%5%155%183$1@%184$3$0@3%184$3$0@3%84%184$4$1@2|@%85%184$4$1@2|@%86%87%184$5$2@2||@%88%90%184$5$2@2||@%91%92%184$5$2@2||@%93%94%184$5$2@2||@%95%96%183$0@%184$5$2@3%184$5$2@3%9%196$2@%49%225$1@%184$7$4@3%56%242$1@%184$8$5@3%203$0@%58%184$9$6@2|@%59%235$0@%62%184$10$7@2|@%3%184$0@|@|@2|@|@%51%52%184$8$5@2||@%53%54%184$8$5@2||@|@%10%184$6$3@2|@%11%12%184$7$4@2||@%13%14%184$7$4@2||@%15%16%184$7$4@2||@%17%19%184$7$4@2||@%20%21%184$7$4@2||@%22%23%184$7$4@2||@%24%25%184$7$4@2||@%26%27%28%184$8$5@2|||@%30%31%184$7$4@2||@%32%33%184$7$4@2||@%34%35%184$7$4@2||@%36%37%184$7$4@2||@%38%39%184$7$4@2||@%40%41%184$7$4@2||@%42%43%184$7$4@2||@||@%97%98%184$5$2@2||@%99%101%184$5$2@2||@%102%103%104%184$6$3@2|||@%105%106%184$5$2@2||@%107%108%184$5$2@2||@%109%110%184$5$2@2||@%112%113%184$5$2@2||@%114%115%184$5$2@2||@%116%117%184$5$2@2||@%118%119%184$5$2@2||@||@||@2"])
  fun op secAuthorization_def x = x
    val op secAuthorization_def =
    ThmBind.DT(((("PBIntegratedDef",4),[]),[]),
               [ThmBind.read"%163%155%171%232$0@2%234%216$0@3|@"])
  fun op secContext_def x = x
    val op secContext_def =
    ThmBind.DT(((("PBIntegratedDef",5),
                [("PBTypeIntegrated",[118])]),["DISK_THM"]),
               [ThmBind.read"%169%163%155%172%233%194@$0@2%176%173%216$0@2%241@2%180%217%228%198%197%191%241@5%208%190%195@2%228%198%197%193%209@7%188@2%180%228%189@2%188@3|@2%169%163%155%172%233%185@$0@2%176%173%216$0@2%239@2%180%217%228%198%197%191%239@5%208%190%195@2%228%198%197%193%205@7%188@2%180%228%189@2%188@3|@2%169%163%155%172%233%177@$0@2%176%173%216$0@2%237@2%180%217%228%198%197%191%237@5%208%190%195@2%228%198%197%193%223@7%188@2%180%228%189@2%188@3|@2%169%163%155%172%233%186@$0@2%176%173%216$0@2%237@2%180%217%228%198%197%191%240@5%208%190%195@2%228%198%197%193%206@7%188@2%180%228%189@2%188@3|@2%163%155%172%233%178@$0@2%176%173%216$0@2%238@2%180%217%228%198%197%191%238@5%208%190%195@2%228%198%197%193%204@7%188@2%180%228%189@2%188@3|@5"])
  fun op getOmniCommand_ind x = x
    val op getOmniCommand_ind =
    ThmBind.DT(((("PBIntegratedDef",2),
                [("OMNIType",[15,32,37]),
                 ("PBTypeIntegrated",[17,61,66,84,90]),
                 ("aclfoundation",[34,55,111,116]),
                 ("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("basicSize",[4]),
                 ("bool",
                 [25,26,35,46,47,50,51,52,53,57,62,71,75,76,77,79,92,95,
                  103,104,106]),("list",[7,46]),("numeral",[0,3,5,7,8]),
                 ("option",[6]),("prim_rec",[42]),
                 ("relation",[107,119,121]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%162%0%174%169$0%188@2%169%165%3%163%155$2%180%231%190%192@2%228%198%197%191$1@6$0@2|@|@2%169%163%155%174$1$0@2$1%180%199@$0@3|@2%169%163%155%174$1$0@2$1%180%182@$0@3|@2%169%166%67%163%155%174$2$0@2$2%180%228$1@2$0@3|@|@2%169%156%78%163%155%174$2$0@2$2%180%224$1@2$0@3|@|@2%169%156%89%156%100%163%155%174$3$0@2$3%180%202$2@$1@2$0@3|@|@|@2%169%156%111%156%122%163%155%174$3$0@2$3%180%226$2@$1@2$0@3|@|@|@2%169%156%133%156%144%163%155%174$3$0@2$3%180%217$2@$1@2$0@3|@|@|@2%169%156%7%156%18%163%155%174$3$0@2$3%180%212$2@$1@2$0@3|@|@|@2%169%158%29%163%155%174$2$0@2$2%180%231$1@%199@2$0@3|@|@2%169%158%29%163%155%174$2$0@2$2%180%231$1@%182@2$0@3|@|@2%169%168%44%163%155%174$2$0@2$2%180%231%190$1@2%228%189@3$0@3|@|@2%169%160%55%163%155%174$2$0@2$2%180%231%190%195@2%228%198$1@4$0@3|@|@2%169%161%57%163%155%174$2$0@2$2%180%231%190%192@2%228%198%181$1@5$0@3|@|@2%169%167%61%163%155%174$2$0@2$2%180%231%190%192@2%228%198%197%193$1@6$0@3|@|@2%169%158%45%158%46%166%120%163%155%174$4$0@2$4%180%231%222$3@$2@2%228$1@3$0@3|@|@|@|@2%169%158%47%158%48%166%120%163%155%174$4$0@2$4%180%231%229$3@$2@2%228$1@3$0@3|@|@|@|@2%169%158%29%156%121%163%155%174$3$0@2$3%180%231$2@%224$1@3$0@3|@|@|@2%169%158%29%156%123%156%124%163%155%174$4$0@2$4%180%231$3@%202$2@$1@3$0@3|@|@|@|@2%169%158%29%156%125%156%126%163%155%174$4$0@2$4%180%231$3@%226$2@$1@3$0@3|@|@|@|@2%169%158%29%156%127%156%128%163%155%174$4$0@2$4%180%231$3@%217$2@$1@3$0@3|@|@|@|@2%169%158%29%156%129%156%130%163%155%174$4$0@2$4%180%231$3@%212$2@$1@3$0@3|@|@|@|@2%169%158%29%158%131%156%132%163%155%174$4$0@2$4%180%231$3@%231$2@$1@3$0@3|@|@|@|@2%169%158%29%158%134%158%135%163%155%174$4$0@2$4%180%231$3@%236$2@$1@3$0@3|@|@|@|@2%169%158%29%158%136%156%137%163%155%174$4$0@2$4%180%231$3@%208$2@$1@3$0@3|@|@|@|@2%169%158%29%158%138%158%139%156%140%163%155%174$5$0@2$5%180%231$4@%230$3@$2@$1@3$0@3|@|@|@|@|@2%169%158%29%157%141%157%142%163%155%174$4$0@2$4%180%231$3@%210$2@$1@3$0@3|@|@|@|@2%169%158%29%157%143%157%145%163%155%174$4$0@2$4%180%231$3@%213$2@$1@3$0@3|@|@|@|@2%169%158%29%159%146%159%147%163%155%174$4$0@2$4%180%231$3@%211$2@$1@3$0@3|@|@|@|@2%169%158%29%159%148%159%149%163%155%174$4$0@2$4%180%231$3@%215$2@$1@3$0@3|@|@|@|@2%169%158%29%164%150%164%151%163%155%174$4$0@2$4%180%231$3@%214$2@$1@3$0@3|@|@|@|@2%169%158%29%164%152%164%153%163%155%174$4$0@2$4%180%231$3@%221$2@$1@3$0@3|@|@|@|@2%169%158%29%164%154%164%8%163%155%174$4$0@2$4%180%231$3@%220$2@$1@3$0@3|@|@|@|@2%169%158%50%158%60%163%155%174$3$0@2$3%180%236$2@$1@2$0@3|@|@|@2%169%158%63%156%64%163%155%174$3$0@2$3%180%208$2@$1@2$0@3|@|@|@2%169%158%65%158%66%156%68%163%155%174$4$0@2$4%180%230$3@$2@$1@2$0@3|@|@|@|@2%169%157%69%157%70%163%155%174$3$0@2$3%180%210$2@$1@2$0@3|@|@|@2%169%157%71%157%72%163%155%174$3$0@2$3%180%213$2@$1@2$0@3|@|@|@2%169%159%73%159%74%163%155%174$3$0@2$3%180%211$2@$1@2$0@3|@|@|@2%169%159%75%159%76%163%155%174$3$0@2$3%180%215$2@$1@2$0@3|@|@|@2%169%164%77%164%79%163%155%174$3$0@2$3%180%214$2@$1@2$0@3|@|@|@2%169%164%80%164%81%163%155%174$3$0@2$3%180%221$2@$1@2$0@3|@|@|@2%164%82%164%83%163%155%174$3$0@2$3%180%220$2@$1@2$0@3|@|@|@45%163%6$1$0@|@2|@"])
  fun op getOmniCommand_def x = x
    val op getOmniCommand_def =
    ThmBind.DT(((("PBIntegratedDef",3),
                [("OMNIType",[15,31,32]),("PBIntegratedDef",[1]),
                 ("PBTypeIntegrated",[17,60,61,84,86]),
                 ("aclfoundation",[33,34,110,111]),
                 ("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("basicSize",[4]),
                 ("bool",[15,25,35,50,51,53,57,62,92,95,103,104,106]),
                 ("combin",[19]),("list",[6,7]),("numeral",[0,3,5,7,8]),
                 ("option",[7]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%169%173%216%188@2%218@2%169%163%155%165%3%173%216%180%231%190%192@2%228%198%197%191$0@6$1@3$0@|@|@2%169%163%155%173%216%180%199@$0@3%216$0@2|@2%169%163%155%173%216%180%182@$0@3%216$0@2|@2%169%163%155%166%67%173%216%180%228$0@2$1@3%216$1@2|@|@2%169%163%155%156%78%173%216%180%224$0@2$1@3%216$1@2|@|@2%169%163%155%156%100%156%89%173%216%180%202$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%156%122%156%111%173%216%180%226$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%156%144%156%133%173%216%180%217$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%156%18%156%7%173%216%180%212$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%158%29%173%216%180%231$0@%199@2$1@3%216$1@2|@|@2%169%163%155%158%29%173%216%180%231$0@%182@2$1@3%216$1@2|@|@2%169%163%155%168%44%173%216%180%231%190$0@2%228%189@3$1@3%216$1@2|@|@2%169%163%155%160%55%173%216%180%231%190%195@2%228%198$0@4$1@3%216$1@2|@|@2%169%163%155%161%57%173%216%180%231%190%192@2%228%198%181$0@5$1@3%216$1@2|@|@2%169%163%155%167%61%173%216%180%231%190%192@2%228%198%197%193$0@6$1@3%216$1@2|@|@2%169%163%155%166%120%158%46%158%45%173%216%180%231%222$0@$1@2%228$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%166%120%158%48%158%47%173%216%180%231%229$0@$1@2%228$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%156%121%158%29%173%216%180%231$0@%224$1@3$2@3%216$2@2|@|@|@2%169%163%155%156%124%156%123%158%29%173%216%180%231$0@%202$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%156%126%156%125%158%29%173%216%180%231$0@%226$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%156%128%156%127%158%29%173%216%180%231$0@%217$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%156%130%156%129%158%29%173%216%180%231$0@%212$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%156%132%158%131%158%29%173%216%180%231$0@%231$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%158%135%158%134%158%29%173%216%180%231$0@%236$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%156%137%158%136%158%29%173%216%180%231$0@%208$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%156%140%158%139%158%138%158%29%173%216%180%231$0@%230$1@$2@$3@3$4@3%216$4@2|@|@|@|@|@2%169%163%155%157%142%157%141%158%29%173%216%180%231$0@%210$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%157%145%157%143%158%29%173%216%180%231$0@%213$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%159%147%159%146%158%29%173%216%180%231$0@%211$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%159%149%159%148%158%29%173%216%180%231$0@%215$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%164%151%164%150%158%29%173%216%180%231$0@%214$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%164%153%164%152%158%29%173%216%180%231$0@%221$1@$2@3$3@3%216$3@2|@|@|@|@2%169%163%155%164%154%158%29%164%8%173%216%180%231$1@%220$2@$0@3$3@3%216$3@2|@|@|@|@2%169%163%155%158%60%158%50%173%216%180%236$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%156%64%158%63%173%216%180%208$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%156%68%158%66%158%65%173%216%180%230$0@$1@$2@2$3@3%216$3@2|@|@|@|@2%169%163%155%157%70%157%69%173%216%180%210$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%157%72%157%71%173%216%180%213$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%159%74%159%73%173%216%180%211$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%159%76%159%75%173%216%180%215$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%164%79%164%77%173%216%180%214$0@$1@2$2@3%216$2@2|@|@|@2%169%163%155%164%81%164%80%173%216%180%221$0@$1@2$2@3%216$2@2|@|@|@2%163%155%164%83%164%82%173%216%180%220$0@$1@2$2@3%216$2@2|@|@|@44"])

  val _ = DB.bindl "PBIntegratedDef"
  [("secHelper_def",secHelper_def,DB.Def),
   ("getOmniCommand_primitive_def",getOmniCommand_primitive_def,DB.Def),
   ("secAuthorization_def",secAuthorization_def,DB.Def),
   ("secContext_def",secContext_def,DB.Def),
   ("getOmniCommand_ind",getOmniCommand_ind,DB.Thm),
   ("getOmniCommand_def",getOmniCommand_def,DB.Thm)]

  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "PBIntegratedDef",
    thydataty = "compute",
    read = ThmBind.read,
    data =
        "PBIntegratedDef.secHelper_def PBIntegratedDef.secContext_def PBIntegratedDef.getOmniCommand_def PBIntegratedDef.secAuthorization_def"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "PBIntegratedDef",
    thydataty = "TermGrammarDeltas",
    read = ThmBind.read,
    data =
        "OO9.secHelper4.%234OO14.getOmniCommand4.%216OO16.secAuthorization4.%232OO10.secContext4.%233"
  }
  local open GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val PBIntegratedDef_grammars = merge_grammars ["PBTypeIntegrated",
                                                 "aclfoundation"]
  local
  val (tyUDs, tmUDs) = GrammarDeltas.thy_deltas{thyname="PBIntegratedDef"}
  val addtmUDs = term_grammar.add_deltas tmUDs
  val addtyUDs = type_grammar.apply_deltas tyUDs
  in
  val PBIntegratedDef_grammars = 
    Portable.## (addtyUDs,addtmUDs) PBIntegratedDef_grammars
  val _ = Parse.grammarDB_insert("PBIntegratedDef",PBIntegratedDef_grammars)
  val _ = Parse.temp_set_grammars (addtyUDs (Parse.type_grammar()), addtmUDs (Parse.term_grammar()))
  end (* addUDs local *)
  end

val _ = if !Globals.print_thy_loads then TextIO.print "done\n" else ()
val _ = Theory.load_complete "PBIntegratedDef"
end
